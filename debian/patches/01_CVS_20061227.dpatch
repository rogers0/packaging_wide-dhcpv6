#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_CVS_20061227.dpatch by Jeremie Corbier <jeremie.corbier@resel.enst-bretagne.fr>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Update to upstream CVS as of 12/27/2006.

@DPATCH@

diff -Naur -x .bzr -x CVS upstream/addrconf.c upstream-cvs/addrconf.c
--- upstream/addrconf.c	2006-08-06 21:35:31.000000000 -0700
+++ upstream-cvs/addrconf.c	2006-12-06 09:01:43.000000000 -0800
@@ -383,7 +383,7 @@
 	addr = &sa->addr;
 	memset(&sin6, 0, sizeof(sin6));
 	sin6.sin6_family = AF_INET6;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 	sin6.sin6_len = sizeof(sin6);
 #endif
 	sin6.sin6_addr = addr->addr;
diff -Naur -x .bzr -x CVS upstream/CHANGES upstream-cvs/CHANGES
--- upstream/CHANGES	2006-10-13 05:19:12.000000000 -0700
+++ upstream-cvs/CHANGES	2006-12-06 09:01:41.000000000 -0800
@@ -1,3 +1,25 @@
+2006-12-04  SUZUKI, Shinsuke <suz@kame.net>
+	* dhcp6c.8: clarified the behavior of the Info-req mode.
+	* addrconf.c, common.[ch], configure, configure.in, dhcp6relay.c,
+	prefixconf.c: introduced a HAVE_SA_LEN macro to support OSes 
+	(other than linux) without length field in sockaddr_*
+
+2006-11-15  SUZUKI, Shinsuke <suz@kame.net>
+	* dhcp6s.c: fixed an IA allocation failure from pool when it doubly
+	requested by the same client.  (patch submitted by Hajimu UMEMOTO)
+	* Makefile.in: creates man/man[58] in "make install" 
+	(suggested by Masahide NAKAMURA)
+
+2006-11-05  SUZUKI, Shinsuke <suz@kame.net>
+	* dhcp6s.c: dhcp6s recognizes "-P" option.
+	(patch submitted by Masahide NAKAMURA)
+
+	* dhcp6relay.c: accepts ULA (Bug-ID 1584704)
+
+	* Makefile.in: fixed a compilation error on SuSE and Debian Linux.
+	(patch submitted by Masahide NAKAMURA)
+
+	--- 20061016 tar ball released ---
 2006-10-13  SUZUKI, Shinsuke <suz@kame.net>
 	* Makefile.in: creates the target directory in "make install" 
 	(suggested by Masahide NAKAMURA)
diff -Naur -x .bzr -x CVS upstream/common.c upstream-cvs/common.c
--- upstream/common.c	2006-09-20 01:22:24.000000000 -0700
+++ upstream-cvs/common.c	2006-12-06 09:01:43.000000000 -0800
@@ -703,7 +703,7 @@
 
 		if (ifa->ifa_addr->sa_family != AF_INET6)
 			continue;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 		if (ifa->ifa_addr->sa_len > sizeof(sin6))
 			continue;
 #endif
@@ -868,7 +868,7 @@
 
 	memset(sa6, 0, sizeof(*sa6));
 	sa6->sin6_family = AF_INET6;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 	sa6->sin6_len = sizeof(*sa6);
 #endif
 
@@ -905,7 +905,7 @@
 
 	memset(&sa6, 0, sizeof(sa6));
 	sa6.sin6_family = AF_INET6;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 	sa6.sin6_len = sizeof(sa6);
 #endif
 	sa6.sin6_addr = *in6;
diff -Naur -x .bzr -x CVS upstream/common.h upstream-cvs/common.h
--- upstream/common.h	2006-09-02 01:00:24.000000000 -0700
+++ upstream-cvs/common.h	2006-12-06 09:01:44.000000000 -0800
@@ -103,7 +103,7 @@
 static __inline u_int8_t
 sysdep_sa_len (const struct sockaddr *sa)
 {
-#ifdef __linux__
+#ifndef HAVE_SA_LEN
   switch (sa->sa_family)
     {
     case AF_INET:
diff -Naur -x .bzr -x CVS upstream/configure upstream-cvs/configure
--- upstream/configure	2006-09-02 01:07:29.000000000 -0700
+++ upstream-cvs/configure	2006-12-06 09:01:45.000000000 -0800
@@ -5397,6 +5397,74 @@
 rm -f conftest.err conftest.$ac_objext conftest.$ac_ext;
 fi
 
+echo "$as_me:$LINENO: checking if you have a length field in struct sockaddr*" >&5
+echo $ECHO_N "checking if you have a length field in struct sockaddr*... $ECHO_C" >&6
+if test "${ts_cv_sa_len+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+   cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+ #include <sys/types.h>
+ #include <sys/socket.h>
+
+int
+main ()
+{
+
+ struct sockaddr a;
+ a.sa_len = 1;
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ts_cv_sa_len="yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+ts_cv_sa_len="no"
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+echo "$as_me:$LINENO: result: $ts_cv_sa_len" >&5
+echo "${ECHO_T}$ts_cv_sa_len" >&6;
+if test "$ts_cv_sa_len" = yes; then
+
+cat >>confdefs.h <<\_ACEOF
+#define HAVE_SA_LEN 1
+_ACEOF
+
+fi
+
 
 for ac_header in stdarg.h
 do
diff -Naur -x .bzr -x CVS upstream/configure.in upstream-cvs/configure.in
--- upstream/configure.in	2006-09-02 01:00:25.000000000 -0700
+++ upstream-cvs/configure.in	2006-12-06 09:01:45.000000000 -0800
@@ -187,6 +187,21 @@
 	 AC_DEFINE(HAVE_TAILQ_FOREACH_REVERSE_OLD)]);
 fi
 
+dnl Checks for other features
+AC_MSG_CHECKING(if you have a length field in struct sockaddr*)
+AC_CACHE_VAL(ts_cv_sa_len, [dnl
+ AC_TRY_COMPILE([
+ #include <sys/types.h>
+ #include <sys/socket.h>
+ ], [ 
+ struct sockaddr a;
+ a.sa_len = 1;
+ ], [ts_cv_sa_len="yes"], [ts_cv_sa_len="no"])])
+AC_MSG_RESULT($ts_cv_sa_len);
+if test "$ts_cv_sa_len" = yes; then
+	AC_DEFINE([HAVE_SA_LEN], 1, [Define to 1 if you have a length field in struct sockaddr])
+fi
+
 AC_CHECK_HEADERS(stdarg.h)
 
 AC_OUTPUT(Makefile)
diff -Naur -x .bzr -x CVS upstream/dhcp6c.8 upstream-cvs/dhcp6c.8
--- upstream/dhcp6c.8	2006-07-30 03:24:19.000000000 -0700
+++ upstream-cvs/dhcp6c.8	2006-12-06 09:01:45.000000000 -0800
@@ -74,7 +74,19 @@
 it prints the messages to standard error if this option is
 specified.
 .It Fl i
-Info-req mode.  In this mode, stateless DHCPv6 is executed with an automatic configuration, and the obtained info is written to stdout.  After this output, the program is terminated.  (suits for a use in shell-script etc)
+Info-req mode.  In this mode, stateless DHCPv6 is executed with the folllowing configuration, and the obtained info is written to stdout.  After this output,
+.Nm
+is terminated.  (suits for a use in shell-script etc).
+.Bd -literal -offset
+ interface (interface given in the argument) {
+	information-only;
+	script (a script which displays the received information to stdout);
+ };
+.Ed
+.Pp
+Since the configuration is internally generated, you cannot provide a configuration in this mode.  If you want to have different actions for the stateless DHCPv6 information, you should write an appropriate configuration and invoke
+.Nm
+without this option.
 .It Fl p Ar pid-file
 Use
 .Ar pid-file
diff -Naur -x .bzr -x CVS upstream/dhcp6relay.c upstream-cvs/dhcp6relay.c
--- upstream/dhcp6relay.c	2006-07-28 18:42:09.000000000 -0700
+++ upstream-cvs/dhcp6relay.c	2006-12-06 09:01:46.000000000 -0800
@@ -100,6 +100,7 @@
 static char *global_strings[] = {
 	/* "fec0::/10",	site-local unicast addresses were deprecated */
 	"2000::/3",
+	"FC00::/7",  /* Unique Local Address (RFC4193) */
 	NULL
 };
 
@@ -269,7 +270,7 @@
 	/* fill in each member of the entry */
 	memset(pent, 0, sizeof (*pent));
 	pent->paddr.sin6_family = AF_INET6;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 	pent->paddr.sin6_len = sizeof (struct sockaddr_in6);
 #endif
 	pent->paddr.sin6_addr = paddr;
diff -Naur -x .bzr -x CVS upstream/dhcp6s.c upstream-cvs/dhcp6s.c
--- upstream/dhcp6s.c	2006-08-06 21:35:32.000000000 -0700
+++ upstream-cvs/dhcp6s.c	2006-11-18 13:18:22.000000000 -0800
@@ -279,6 +279,7 @@
 			break;
 		case 'P':
 			pid_file = optarg;
+			break;
 		default:
 			usage();
 			/* NOTREACHED */
@@ -2500,13 +2501,12 @@
 		    bia = TAILQ_NEXT(bia, link)) {
 			if ((v = dhcp6_find_listval(conflist,
 			    bia->type, &bia->uv, 0)) != NULL) {
-				found++;
 				TAILQ_REMOVE(conflist, v, link);
 				dhcp6_clear_listval(v);
 			}
 		}
 
-		return (found);
+		return (1);
 	}
 
 	/*
diff -Naur -x .bzr -x CVS upstream/Makefile.in upstream-cvs/Makefile.in
--- upstream/Makefile.in	2006-10-13 05:19:12.000000000 -0700
+++ upstream-cvs/Makefile.in	2006-11-18 13:18:22.000000000 -0800
@@ -25,7 +25,7 @@
 # SUCH DAMAGE.
 
 #
-# $Id: Makefile.in,v 1.11 2006/10/13 12:19:12 suzsuz Exp $
+# $Id: Makefile.in,v 1.13 2006/11/14 19:46:54 suzsuz Exp $
 # $KAME: Makefile.in,v 1.45 2005/10/16 16:25:38 suz Exp $
 #
 
@@ -38,7 +38,7 @@
 	-DLOCALDBDIR=\"${localdbdir}\"
 LDFLAGS=@LDFLAGS@
 LIBOBJS=@LIBOBJS@
-LIBS=	@LIBS@ -ly -ll
+LIBS=	@LIBS@ @LEXLIB@
 CC=	@CC@
 TARGET=	dhcp6c dhcp6s dhcp6relay dhcp6ctl
 
@@ -94,7 +94,7 @@
 	expand bootp-dhcp-parameters | perl gentab.pl > ianaopts.h
 
 install::
-	-mkdir -p $(sbindir) $(mandir)
+	-mkdir -p $(sbindir) $(mandir)/man5 $(mandir)/man8
 	$(INSTALL_PROGRAM) -s -o bin -g bin $(TARGET) $(sbindir)
 	$(INSTALL_DATA) -o bin -g bin dhcp6c.8 $(mandir)/man8
 	$(INSTALL_DATA) -o bin -g bin dhcp6s.8 $(mandir)/man8
diff -Naur -x .bzr -x CVS upstream/prefixconf.c upstream-cvs/prefixconf.c
--- upstream/prefixconf.c	2006-08-06 21:35:32.000000000 -0700
+++ upstream-cvs/prefixconf.c	2006-12-06 09:01:46.000000000 -0800
@@ -447,7 +447,7 @@
 	ifpfx->ifconf = pconf;
 
 	ifpfx->paddr.sin6_family = AF_INET6;
-#ifndef __linux__
+#ifdef HAVE_SA_LEN
 	ifpfx->paddr.sin6_len = sizeof(struct sockaddr_in6);
 #endif
 	ifpfx->paddr.sin6_addr = prefix->addr;
