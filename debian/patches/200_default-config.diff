This patch allows people to define an interface default statement.

diff --git a/config.c b/config.c
index 383c12a..7615bbe 100644
--- a/config.c
+++ b/config.c
@@ -70,6 +70,7 @@ struct dhcp6_list bcmcslist, bcmcsnamelist;
 long long optrefreshtime;
 
 static struct dhcp6_ifconf *dhcp6_ifconflist;
+static struct dhcp6_ifconf *dhcp6_ifconfdefault;
 struct ia_conflist ia_conflist0;
 static struct host_conf *host_conflist0, *host_conflist;
 static struct keyinfo *key_list, *key_list0;
@@ -152,15 +153,11 @@ configure_interface(iflist)
 	struct dhcp6_ifconf *ifc;
 	char *cp;
 
+	dhcp6_ifconfdefault = NULL;
+
 	for (ifp = iflist; ifp; ifp = ifp->next) {
 		struct cf_list *cfl;
 
-		if (if_nametoindex(ifp->name) == 0) {
-			dprintf(LOG_ERR, FNAME, "invalid interface(%s): %s",
-			    ifp->name, strerror(errno));
-			goto bad;
-		}
-
 		if ((ifc = malloc(sizeof(*ifc))) == NULL) {
 			dprintf(LOG_ERR, FNAME,
 			    "memory allocation for %s failed", ifp->name);
@@ -170,6 +167,16 @@ configure_interface(iflist)
 		ifc->next = dhcp6_ifconflist;
 		dhcp6_ifconflist = ifc;
 
+		if (strcmp(ifp->name, "default") == 0) {
+			dprintf(LOG_DEBUG, FNAME, "defining default interface "
+				"configuration");
+			dhcp6_ifconfdefault = ifc;
+		} else if (if_nametoindex(ifp->name) == 0) {
+			dprintf(LOG_ERR, FNAME, "invalid interface(%s): %s",
+			    ifp->name, strerror(errno));
+			goto bad;
+		}
+
 		if ((ifc->ifname = strdup(ifp->name)) == NULL) {
 			dprintf(LOG_ERR, FNAME, "failed to copy ifname");
 			goto bad;
@@ -312,6 +319,7 @@ configure_interface(iflist)
   bad:
 	clear_ifconf(dhcp6_ifconflist);
 	dhcp6_ifconflist = NULL;
+	dhcp6_ifconfdefault = NULL;
 	return (-1);
 }
 
@@ -1275,6 +1283,7 @@ configure_cleanup()
 	clear_iaconf(&ia_conflist0);
 	clear_ifconf(dhcp6_ifconflist);
 	dhcp6_ifconflist = NULL;
+	dhcp6_ifconfdefault = NULL;
 	clear_hostconf(host_conflist0);
 	host_conflist0 = NULL;
 	clear_keys(key_list0);
@@ -1322,8 +1331,11 @@ configure_commit()
 			if (strcmp(ifp->ifname, ifc->ifname) == 0)
 				break;
 		}
-		if (ifc == NULL)
-			continue;
+		if (ifc == NULL) {
+			if (dhcp6_ifconfdefault == NULL)
+				continue;
+			ifc = dhcp6_ifconfdefault;
+		}
 
 		/* copy new configuration */
 		ifp->send_flags = ifc->send_flags;
@@ -1349,6 +1361,7 @@ configure_commit()
 
 	clear_ifconf(dhcp6_ifconflist);
 	dhcp6_ifconflist = NULL;
+	dhcp6_ifconfdefault = NULL;
 
 	/* clear unused IA configuration */
 	if (!TAILQ_EMPTY(&ia_conflist0)) {
