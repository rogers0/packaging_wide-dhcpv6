Index: common.c
===================================================================
--- common.c.orig	2008-03-18 12:30:21.000000000 +0100
+++ common.c	2008-03-18 12:31:22.000000000 +0100
@@ -1520,7 +1520,7 @@
 		/* option length field overrun */
 		if (np > ep) {
 			dprintf(LOG_INFO, FNAME, "malformed DHCP options");
-			return (-1);
+			goto fail;
 		}
 
 		switch (opt) {
@@ -2291,6 +2291,7 @@
 		}
 		memcpy(p, tmpbuf, optlen);
 		free(tmpbuf);
+		tmpbuf = NULL;
 		p = (struct dhcp6opt *)((char *)p + optlen);
 		len += optlen;
 	}
@@ -2371,6 +2372,7 @@
 			goto fail;
 		}
 		free(tmpbuf);
+		tmpbuf = NULL;
 	}
 
 	if (dhcp6_set_domain(DH6OPT_SIP_SERVER_D, &optinfo->sipname_list,
@@ -2443,6 +2445,7 @@
 		}
 		memcpy(p, tmpbuf, optlen);
 		free(tmpbuf);
+		tmpbuf = NULL;
 		p = (struct dhcp6opt *)((char *)p + optlen);
 		len += optlen;
 	}
@@ -2544,14 +2547,18 @@
 			default:
 				dprintf(LOG_ERR, FNAME,
 				    "unexpected authentication protocol");
+				free(auth);
 				goto fail;
 			}
 		}
 
 		if (copy_option(DH6OPT_AUTH, authlen - 4,
 		    &auth->dh6_auth_proto, &p, optep, &len) != 0) {
+			free(auth);
 			goto fail;
 		}
+
+		free(auth);
 	}
 
 	return (len);
Index: config.c
===================================================================
--- config.c.orig	2008-03-18 12:21:35.000000000 +0100
+++ config.c	2008-03-18 12:30:21.000000000 +0100
@@ -2029,7 +2029,7 @@
 
 	if ((host = malloc(sizeof(*host))) == NULL) {
 		dprintf(LOG_ERR, FNAME, "memory allocation failed");
-		return (NULL);
+		goto bad;
 	}
 	memset(host, 0, sizeof(*host));
 	TAILQ_INIT(&host->prefix_list);
@@ -2121,6 +2121,7 @@
 	}
 	if ((pool->name = strdup(name)) == NULL) {
 		dprintf(LOG_ERR, FNAME, "memory allocation failed");
+		free(pool);
 		return (NULL);
 	}
 	pool->min = range->min;
